<div class="mt-4">
  <h2 class="text-white"><%= t('reports.isometries.title') %>:  <%= @project.name %></h2>

  <!-- Filters -->
  <div class="card mb-4">
    <div class="card-body">
      <h5><%=t('activerecord.attributes.reports.filters')%></h5>
      <%= form_tag project_isometries_report_path(@project), method: :get, class: 'row g-3', data: { controller: 'form-submission' } do %>
        <div class="col-md-2">
          <label class="form-label"><%=t('activerecord.attributes.reports.line_id')%></label>
          <%= select_tag :line_id,
              options_for_select([['All', '']] + @line_ids.map { |id| [id, id] }, params[:line_id]),
              class: 'form-select',
              data: { action: 'change->form-submission#submit' } %>
        </div>

        <div class="col-md-2">
          <label class="form-label"><%=t('activerecord.attributes.reports.system')%></label>
          <%= select_tag :system,
              options_for_select([['All', '']] + @systems.map { |s| [s, s] }, params[:system]),
              class: 'form-select',
              data: { action: 'change->form-submission#submit' } %>
        </div>

        <div class="col-md-2">
          <label class="form-label"><%=t('activerecord.attributes.reports.work_package_number')%></label>
          <%= select_tag :work_package_number,
              options_for_select([['All', '']] + @work_package_numbers.map { |wp| [wp, wp] }, params[:work_package_number]),
              class: 'form-select',
              data: { action: 'change->form-submission#submit' } %>
        </div>
        <div class="col-md-2">
          <label class="form-label"><%=t('activerecord.attributes.reports.pipe_class')%></label>
          <%= select_tag :pipe_class,
              options_for_select([['All', '']] + @pipe_classes.map { |pc| [pc, pc] }, params[:pipe_class]),
              class: 'form-select',
              data: { action: 'change->form-submission#submit' } %>
        </div>

        <div class="col-md-2">
          <label class="form-label"><%=t('activerecord.attributes.reports.material')%></label>
          <%= select_tag :material,
              options_for_select([['All', '']] + @materials.map { |m| [m, m] }, params[:material]),
              class: 'form-select',
              data: { action: 'change->form-submission#submit' } %>
        </div>

        <div class="col-md-2">
          <label class="form-label"><%=t('activerecord.attributes.reports.medium')%></label>
          <%= select_tag :medium,
              options_for_select([['All', '']] + @mediums.map { |m| [m, m] }, params[:medium]),
              class: 'form-select',
              data: { action: 'change->form-submission#submit' } %>
        </div>
      <% end %>
    </div>
  </div>

  <%
  # Common calculations for all sections using total filtered isometries
  total_isometries = @all_isometries.count
  # Round pipe length calculations to 2 decimal places to match schema
  total_pipe_length = @all_isometries.sum { |iso| iso.pipe_length&.to_f || 0 }.round(2)

  # Get sector counts from the project
  sector_counts = {}
  @sector_models.each do |sector|
    # Get the sector model from the project's sectors
    sector_model = @project.sectors.find_by(key: sector)
    # Use the count attribute directly from the sector model
    if sector_model && sector_model.respond_to?(:count) && !sector_model.count.nil?
      sector_counts[sector] = sector_model.count
    else
      # Fallback to counting isometries if sector model doesn't exist or doesn't have count
      if sector == 'work_preparation'
        sector_counts[sector] = @project.isometries.sum { |iso| iso.work_preparations.count }
      elsif sector == 'test_pack'
        sector_counts[sector] = @project.isometries.sum { |iso| iso&.test_packs&.count }
      else
        sector_counts[sector] = @project.isometries.count { |iso| iso.send(sector).present? }
      end
    end
  end

  # Calculate sector completions
  sector_completions = {}
  @sector_models.each do |sector|
    if sector == 'work_preparation'
      completed_isos = @all_isometries.select { |iso| WorkPreparation.completed_for?(iso) }
      in_progress_isos = @all_isometries.select { |iso|
        WorkPreparation.in_progress_for?(iso) && !WorkPreparation.completed_for?(iso)
      }
    elsif sector == 'test_pack'
      completed_isos = @all_isometries.select { |iso| TestPack.completed_for?(iso) }
      in_progress_isos = @all_isometries.select { |iso|
        !TestPack.completed_for?(iso) && TestPack.in_progress_for?(iso)
      }
    else
      completed_isos = @all_isometries.select { |iso| iso.send(sector)&.completed? }
      in_progress_isos = @all_isometries.select { |iso| iso.send(sector) && !iso.send(sector).completed? }
    end

    # Round completed pipe length to 2 decimal places
    completed_pipe_length = completed_isos.sum { |iso| iso.pipe_length&.to_f || 0 }.round(2)

    # Use the sector count from the project instead of total_isometries
    sector_count = sector_counts[sector]

    sector_completions[sector] = {
      completed_count: completed_isos.count,
      in_progress_count: in_progress_isos.count,
      completed_meters: completed_pipe_length,
      sector_count: sector_count,
      count_percentage: sector_count.zero? ? 0 : (completed_isos.count * 100.0 / sector_count).round,
      meters_percentage: total_pipe_length.zero? ? 0 : ((completed_pipe_length || 0) * 100.0 / total_pipe_length).round
    }
  end

  # Calculate total progress based on selected filter sectors
  if @project.progress_filter1_sector && @project.progress_filter2_sector
    filter1_key = @project.progress_filter1_sector.key
    filter2_key = @project.progress_filter2_sector.key

    if sector_completions[filter1_key] && sector_completions[filter2_key]
      # Calculate total completed meters
      total_completed_meters = sector_completions[filter1_key][:completed_meters].to_f +
                             sector_completions[filter2_key][:completed_meters].to_f
      average_pipe_length = (total_completed_meters / 2.0).round(2)
      average_percentage = total_pipe_length.zero? ? 0 : ((average_pipe_length || 0) * 100.0 / total_pipe_length).round
    else
      average_pipe_length = 0
      average_percentage = 0
    end
  else
    average_pipe_length = 0
    average_percentage = 0
  end
  %>

  <!-- Total Progress Bar -->
  <div class="card mb-4">
    <div class="card-body">
      <h5>Total Progress</h5>
      <div class="progress position-relative" style="height: 25px; background-color: #e9ecef;">
        <div class="progress-bar" role="progressbar"
             style="width: <%= average_percentage %>%; background-color: lawngreen;">
        </div>
        <div class="position-absolute top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center">
          <span style="color: #000; font-weight: 500;">
             <%= average_percentage %>%
          </span>
        </div>
      </div>
    </div>
  </div>

  <% if @project.progress_filter1_sector %>
  <!-- First Filter Sector Progress Bar -->
  <div class="card mb-4">
    <div class="card-body">
      <h5><%= t("sectors_progress.#{@project.progress_filter1_sector.key}") %> Progress</h5>
      <div class="progress position-relative" style="height: 25px; background-color: #e9ecef;">
        <div class="progress-bar" role="progressbar"
             style="width: <%= sector_completions[@project.progress_filter1_sector.key][:meters_percentage] %>%; background-color: lawngreen;">
        </div>
        <div class="position-absolute top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center">
          <span style="color: #000; font-weight: 500;">
            <%= sector_completions[@project.progress_filter1_sector.key][:completed_count] %>/<%= sector_completions[@project.progress_filter1_sector.key][:sector_count] %> pcs
            (<%= sector_completions[@project.progress_filter1_sector.key][:count_percentage] %>%) |
            <%= sector_completions[@project.progress_filter1_sector.key][:completed_meters].round() %>/<%= total_pipe_length.round() %>m
            (<%= sector_completions[@project.progress_filter1_sector.key][:meters_percentage] %>%)
          </span>
        </div>
      </div>
    </div>
  </div>
  <% end %>

  <% if @project.progress_filter2_sector %>
  <!-- Second Filter Sector Progress Bar -->
  <div class="card mb-4">
    <div class="card-body">
      <h5><%= t("sectors_progress.#{@project.progress_filter2_sector.key}") %> Progress</h5>
      <div class="progress position-relative" style="height: 25px; background-color: #e9ecef;">
        <div class="progress-bar" role="progressbar"
             style="width: <%= sector_completions[@project.progress_filter2_sector.key][:meters_percentage] %>%; background-color: lawngreen;">
        </div>
        <div class="position-absolute top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center">
          <span style="color: #000; font-weight: 500;">
            <%= sector_completions[@project.progress_filter2_sector.key][:completed_count] %>/<%= sector_completions[@project.progress_filter2_sector.key][:sector_count] %> pcs
            (<%= sector_completions[@project.progress_filter2_sector.key][:count_percentage] %>%) |
            <%= sector_completions[@project.progress_filter2_sector.key][:completed_meters].round() %>/<%= total_pipe_length.round() %>m
            (<%= sector_completions[@project.progress_filter2_sector.key][:meters_percentage] %>%)
          </span>
        </div>
      </div>
    </div>
  </div>
  <% end %>

  <!-- Sector Progress -->
  <div class="card mb-4">
    <div class="card-body">
      <h5>Sector Progress</h5>
      <div class="row">
        <% @sector_models.each do |sector| %>
          <div class="col-md-3 mb-3">
            <div class="card">
              <div class="card-body">
                <h5 class="card-title"><%= t("sectors.#{sector}") %></h5>
                <div class="progress position-relative" style="height: 25px; background-color: #e9ecef;">
                  <div class="progress-bar" role="progressbar"
                       style="width: <%= sector_completions[sector][:count_percentage] %>%; background-color: lawngreen;">
                  </div>
                  <div class="position-absolute top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center">
                    <span style="color: #000; font-weight: 500;">
                      <%= sector_completions[sector][:completed_count] %>/<%= sector_completions[sector][:sector_count] %>
                      (<%= sector_completions[sector][:count_percentage] %>%) pcs |
                      <%= sector_completions[sector][:completed_meters].round() %>/<%= total_pipe_length.round() %>m
                      (<%= sector_completions[sector][:meters_percentage] %>%)
                    </span>
                  </div>
                </div>
              </div>
            </div>
          </div>
        <% end %>
      </div>
    </div>
  </div>

  <!-- Isometries Table -->
  <div class="table-responsive">
    <table class="table table-striped table-bordered" data-controller="datatable">
      <thead>
        <tr>
          <th><%= t('activerecord.attributes.isometry.line_id') %></th>
          <th><%= t('activerecord.attributes.isometry.system') %></th>
          <th><%= t('activerecord.attributes.isometry.work_package_number') %></th>
          <th><%= t('activerecord.attributes.isometry.pipe_class') %></th>
          <th><%= t('activerecord.attributes.isometry.material') %></th>
          <th><%= t('activerecord.attributes.isometry.medium') %></th>
          <th><%= t('activerecord.attributes.isometry.pipe_lenght') %></th>
          <% @sector_models.each do |sector| %>
            <th><%= t("sectors.#{sector}") %></th>
          <% end %>
          <th>Total Progress</th>
        </tr>
      </thead>
      <tbody>
        <% @isometries.each do |isometry| %>
          <tr>
            <td><%= link_to "#{isometry.line_id} / #{isometry.page_number}", project_isometry_path(@project, isometry) %></td>
            <td><%= isometry.system %></td>
            <td><%= isometry.work_package_number %></td>
            <td><%= isometry.pipe_class %></td>
            <td><%= isometry.material %></td>
            <td><%= isometry.medium %></td>
            <td><%= isometry.pipe_length %></td>
            <% @sector_models.each do |sector| %>
              <td>
                <% if sector == 'work_preparation' %>
                  <% status = WorkPreparation.status_for(isometry) %>
                  <% case status %>
                  <% when :completed %>
                    <span class="badge bg-success">Completed</span>
                  <% when :in_progress %>
                    <span class="badge bg-warning">In Progress</span>
                  <% else %>
                    <span class="badge bg-secondary">Not Started</span>
                  <% end %>
                <% elsif sector == 'test_pack' %>
                  <% status = TestPack.status_for(isometry) %>
                  <% case status %>
                  <% when :completed %>
                    <span class="badge bg-success">Completed</span>
                  <% when :in_progress %>
                    <span class="badge bg-warning">In Progress</span>
                  <% else %>
                    <span class="badge bg-secondary">Not Started</span>
                  <% end %>
                <% else %>
                  <% if sector_record = isometry.send(sector) %>
                    <% if sector_record.completed? %>
                      <span class="badge bg-success">Completed</span>
                    <% else %>
                      <span class="badge bg-warning">In Progress</span>
                    <% end %>
                  <% else %>
                    <span class="badge bg-secondary">Not Started</span>
                  <% end %>
                <% end %>
              </td>
            <% end %>
            <td>
              <% completed_sectors = @sector_models.count do |sector|
                if sector == 'work_preparation'
                  WorkPreparation.completed_for?(isometry)
                elsif sector == 'test_pack'
                  TestPack.completed_for?(isometry)
                else
                  isometry.send(sector)&.completed?
                end
              end %>
              <% total_sectors = @sector_models.size %>
              <% progress = (completed_sectors * 100.0 / total_sectors).round() %>
              <div class="progress position-relative" style="height: 25px; background-color: #e9ecef;">
                <div class="progress-bar" role="progressbar"
                     style="width: <%= progress %>%; background-color: lawngreen;">
                </div>
                <div class="position-absolute top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center">
                  <span style="color: #000; font-weight: 500; font-size: 0.8rem;">
                    <%= progress %>%
                  </span>
                </div>
              </div>
            </td>
          </tr>
        <% end %>
      </tbody>
    </table>
  </div>
</div>

<%= render 'pagy' %>